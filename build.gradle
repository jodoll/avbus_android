// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript { 
    ext.kotlin_version = '1.3.61'

    ext {
        // Sdk
        compileSdkVersion = 29
        minSdkVersion = 25
        targetSdkVersion = 29

        buildToolsVersion = '29.0.3'

        //Dependencies
        android_gradle_plugin_version = '3.5.3'
        androidx_core_version = '1.2.0'
        androidx_constraint_layout_version = '1.1.3'
        androidx_espresso_version = '3.1.1'
        androidx_fragment_version = '1.2.2'
        androidx_lifecycle_version = '2.2.0'
        androidx_test_junit_version = '1.1.0'
        app_compat_version = '1.1.0'
        assertk_version = '0.20'
        coroutines_version = '1.3.3'
        junit_version = '5.5.1'
        kotlin_version = '1.3.61'
        mockk_version = '1.9'
        moshi_version = '1.9.2'
        opentest4j_version = '1.2.0'
        opentest4k_version = '1.1.3'
        retrofit_version = '2.7.1'
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$android_gradle_plugin_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    afterEvaluate {
        if (plugins.hasPlugin("com.android.application") || plugins.hasPlugin("com.android.library")) {
            addAndroidOptions(it)
        } else if (plugins.hasPlugin("java") || plugins.hasPlugin("java-library")) {
            addJavaOptions(it)
        }
    }
}

def addAndroidOptions(Project project) {
    project.android {
        compileSdkVersion rootProject.compileSdkVersion
        buildToolsVersion rootProject.buildToolsVersion

        defaultConfig {
            minSdkVersion rootProject.minSdkVersion
            targetSdkVersion rootProject.targetSdkVersion
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
            freeCompilerArgs += ["-module-name", "${rootProject.group}${project.path}", "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
            freeCompilerArgs += ["-module-name", "${rootProject.group}${project.path}", "-Xuse-experimental=kotlinx.coroutines.FlowPreview"]
            freeCompilerArgs += ["-module-name", "${rootProject.group}${project.path}", "-Xuse-experimental=kotlin.ExperimentalStdlibApi"]
        }
    }
}

static def addJavaOptions(Project project ){
    project.sourceCompatibility = JavaVersion.VERSION_1_8
    project.targetCompatibility = JavaVersion.VERSION_1_8
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
